{"version":3,"sources":["App.js","index.js"],"names":["App","useState","text","setText","contentBlock","className","height","value","placeholder","onChange","console","log","maxLength","style","width","marginTop","tools","mock","project","readonly","margin","disabled","children","remarkPlugins","remarkGfm","components","code","node","inline","props","match","exec","String","replace","atomDark","language","PreTag","ReactDOM","render","document","getElementById"],"mappings":"gUAsIeA,MA1Hf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAe,CACnBC,UAAW,GACXC,OAAQ,IACRC,MAAO,GAGPC,YAAa,qBACbC,SAAU,SAACF,GACTJ,EAAQI,GACRG,QAAQC,IAAIJ,IAEdK,UAAW,IAkEb,OACE,sBAAKP,UAAU,MAAf,UACE,6GACA,qBAAKQ,MAAO,CAAEC,MAAO,IAAKC,UAAW,IAArC,SACE,cAAC,IAAD,CACEX,aAAcA,EACdY,MAAO,CAAC,OAAQ,QAAS,UAAW,SACpCC,MAAI,EACJC,QAAQ,UACRC,UAAU,MAGd,oBAAIN,MAAO,CAAEO,OAAQ,UAArB,oDACA,0BAAUC,UAAQ,EAACR,MAAO,CAAEC,MAAO,IAAKR,OAAQ,KAAOC,MAAOL,IAC9D,oBAAIW,MAAO,CAAEO,OAAQ,UAArB,wCACA,qBAAKP,MAAO,CAAEC,MAAO,KAArB,SACE,cAAC,IAAD,CACEQ,SAhFC,kuEAiFDC,cAAe,CAACC,KAChBC,WAAY,CACVC,KADU,YAC4C,EAA/CC,KAAgD,IAA1CC,EAAyC,EAAzCA,OAAQvB,EAAiC,EAAjCA,UAAWiB,EAAsB,EAAtBA,SAAaO,EAAS,iBAC9CC,EAAQ,iBAAiBC,KAAK1B,GAAa,IACjD,OAAQuB,GAAUE,EAChB,cAAC,IAAD,aACER,SAAUU,OAAOV,GAAUW,QAAQ,MAAO,IAC1CpB,MAAOqB,IACPC,SAAUL,EAAM,GAChBM,OAAO,OACHP,IAGN,8CAAMxB,UAAWA,GAAewB,GAAhC,aACGP,eCtHnBe,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.373c0f3b.chunk.js","sourcesContent":["import { useState } from 'react';\nimport Editor from 'property-template-editor';\n// import Editor from './dist';\nimport Markdown from 'react-markdown';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport remarkGfm from 'remark-gfm'\nimport { atomDark } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\n// import './dist/index.css';\nimport 'antd/dist/antd.css'\nimport './App.css';\n\nfunction App() {\n  const [text, setText] = useState('');\n  const contentBlock = {\n    className: '',\n    height: 180,\n    value: '',\n    // value:\n    //   '${convertShow(user.$mp_wx6228eb2adfba3ab4_qr_scene_str.$code.$acc,\\'{\"1231\":\"213\"}\\')}123131${mask(event.$AppClick.$ip,1,1,\\'*\\')}程度还差${user.$mp_wx6228eb2adfba3ab4_qr_scene}',\n    placeholder: '请输入',\n    onChange: (value) => {\n      setText(value);\n      console.log(value);\n    },\n    maxLength: 10,\n  };\n\n  const doc = `\nproperty-template-editor 组件 \\`umd\\`, 通过 \\`zip\\` 包提供:\n\n~~~js\n// 文件结构\nproperty-template-editor\n├── index.css\n├── index.js\n~~~\n\n~~~jsx\nimport React, { useState } from 'react';\n// 引入编辑器和样式\nimport Editor from 'property-template-editor';\nimport 'property-template-editor/index.css';\n\nconst Demo = () => {\n  const [text, setText] = useState('');\n\n  // 编辑器配置\n  const contentBlock = {\n    height: 180,\n    value: text,\n    placeholder: '请输入',\n    onChange: (value) => {\n      console.log('editor value: ', value);\n      setText(value);\n    },\n  };\n\n  return (\n    <Editor\n      contentBlock={contentBlock}\n      tools={['user', 'event', 'product', 'white']}\n      proxy={} // 代理地址\n      mock // 调试阶段开启 mock，不使用 urls 接口\n    />\n  );\n};\n  ~~~\n\n### 属性 Props:\n\n| 属性名称 | 类型 | 说明 | 默认值|\n| - | - | - | - |\n| contentBlock | contentBlock | 编辑器配置 | 见 contentBlock |\n| tools | string[] | 支持插入属性的类型 | ['user', 'event', 'product', 'white'] |\n| proxy | string | 代理 url 路径，最终请求 \\`url\\`：proxy + ?url={realUrl} | - |\n| mock | boolean | api 未就绪启用 mock | false |\n| project | string | 当前项目 | default |\n| readonly | boolean | 只读模式 | false |\n\n注意：mock 仅调试阶段使用，开发阶段传入 proxy 即可，mock 与 proxy 互斥，勿同时使用\n\n#### contentBlock\n| 属性名称 | 类型 | 说明 | 默认值|\n| - | - | - | - |\n| height | number | 编辑器高度 | 180 |\n| value | string | 编辑器 value | '' |\n| placeholder | string | 编辑器 placeholder | '请输入' |\n| onChange | (v: string) => void | 编辑器回调，返回 value | - |\n  `;\n\n  return (\n    <div className=\"App\">\n      <h2>属性编辑器演示 & 使用文档：</h2>\n      <div style={{ width: 900, marginTop: 20 }}>\n        <Editor\n          contentBlock={contentBlock}\n          tools={['user', 'event', 'product', 'white']}\n          mock\n          project=\"default\"\n          readonly={false}\n        />\n      </div>\n      <h3 style={{ margin: '20px 0' }}>编辑区获取 value: </h3>\n      <textarea disabled style={{ width: 900, height: 300 }} value={text} />\n      <h3 style={{ margin: '20px 0' }}>代码示例: </h3>\n      <div style={{ width: 900 }}>\n        <Markdown\n          children={doc}\n          remarkPlugins={[remarkGfm]}\n          components={{\n            code({ node, inline, className, children, ...props }) {\n              const match = /language-(\\w+)/.exec(className || '');\n              return !inline && match ? (\n                <SyntaxHighlighter\n                  children={String(children).replace(/\\n$/, '')}\n                  style={atomDark}\n                  language={match[1]}\n                  PreTag=\"div\"\n                  {...props}\n                />\n              ) : (\n                <code className={className} {...props}>\n                  {children}\n                </code>\n              );\n            },\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}