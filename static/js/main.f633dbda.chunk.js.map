{"version":3,"sources":["App.js","index.js"],"names":["App","useState","text","setText","contentBlock","className","height","value","placeholder","onChange","console","log","maxLength","style","width","marginTop","readonly","labelBlock","tools","urls","userUrl","eventUrl","event2Url","productUrl","product2Url","whiteUrl","mock","margin","disabled","children","remarkPlugins","remarkGfm","components","code","node","inline","props","match","exec","String","replace","atomDark","language","PreTag","ReactDOM","render","document","getElementById"],"mappings":"gUAyKeA,MA/Jf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAKMC,EAAe,CACnBC,UAAW,GACXC,OAAQ,IAERC,MACE,oMACFC,YAAa,qBACbC,SAAU,SAACF,GACTJ,EAAQI,GACRG,QAAQC,IAAIJ,IAEdK,UAAW,IAiGb,OACE,sBAAKP,UAAU,MAAf,UACE,6GACA,qBAAKQ,MAAO,CAAEC,MAAO,IAAKC,UAAW,IAArC,SACE,cAAC,IAAD,CACEF,MAAO,CAAEC,MAAO,KAChBE,UAAU,EACVC,WAvHW,CACjBf,KAAM,iCACNG,UAAW,IAsHLD,aAAcA,EACdc,MAAO,CAAC,OAAQ,QAAS,UAAW,SACpCC,KAzGK,CACXC,QAAS,gCACTC,SACE,2FACFC,UAAW,gCACXC,WACE,2FACFC,YAAa,yDACbC,SACE,oHAiGIC,MAAI,MAGR,oBAAIb,MAAO,CAAEc,OAAQ,UAArB,oDACA,0BAAUC,UAAQ,EAACf,MAAO,CAAEC,MAAO,IAAKR,OAAQ,KAAOC,MAAOL,IAC9D,oBAAIW,MAAO,CAAEc,OAAQ,UAArB,wCACA,qBAAKd,MAAO,CAAEC,MAAO,KAArB,SACE,cAAC,IAAD,CACEe,SAtGC,0gFAuGDC,cAAe,CAACC,KAChBC,WAAY,CACVC,KADU,YAC4C,EAA/CC,KAAgD,IAA1CC,EAAyC,EAAzCA,OAAQ9B,EAAiC,EAAjCA,UAAWwB,EAAsB,EAAtBA,SAAaO,EAAS,iBAC9CC,EAAQ,iBAAiBC,KAAKjC,GAAa,IACjD,OAAQ8B,GAAUE,EAChB,cAAC,IAAD,aACER,SAAUU,OAAOV,GAAUW,QAAQ,MAAO,IAC1C3B,MAAO4B,IACPC,SAAUL,EAAM,GAChBM,OAAO,OACHP,IAGN,8CAAM/B,UAAWA,GAAe+B,GAAhC,aACGP,eCzJnBe,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.f633dbda.chunk.js","sourcesContent":["import { useState } from 'react';\nimport Editor from 'property-template-editor';\nimport Markdown from 'react-markdown';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport remarkGfm from 'remark-gfm'\nimport { atomDark } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nimport 'property-template-editor/dist/index.css';\nimport './App.css';\n\nfunction App() {\n  const [text, setText] = useState('');\n  const labelBlock = {\n    text: '沟通内容：',\n    className: '',\n  };\n  const contentBlock = {\n    className: '',\n    height: 180,\n    // value: '123213${user.$mp_wx6228eb2adfba3ab4_qr_scene}',\n    value:\n      '${convertShow(user.$mp_wx6228eb2adfba3ab4_qr_scene_str.$code.$acc,\\'{\"1231\":\"213\"}\\')}123131${mask(event.$AppClick.$ip,1,1,\\'*\\')}程度还差${user.$mp_wx6228eb2adfba3ab4_qr_scene}',\n    placeholder: '请输入',\n    onChange: (value) => {\n      setText(value);\n      console.log(value);\n    },\n    maxLength: 10,\n  };\n  const urls = {\n    userUrl: '/api/property/user/properties',\n    eventUrl:\n      '/api/v2/sf/events/all?project=default&cache=false&invisible=false&check_permission=false',\n    event2Url: '/api/event/properties?events=',\n    productUrl:\n      '/api/v2/sf/items/type?project=default&cache=false&invisible=false&check_permission=false',\n    product2Url: '/api/v2/sf/items/properties?project=default&item_type=',\n    whiteUrl:\n      'http://10.120.202.72:8115/sf/whiteTag/getWhiteTagList?project=production&token=$f9748a249d55b1949c01f0f098a99a92',\n  };\n\n  const doc = `\nproperty-template-editor 组件（umd）:\n\n~~~js\n// 文件结构\nproperty-template-editor\n├── index.css\n├── index.js\n~~~\n\n~~~jsx\nimport React, { useState } from 'react';\n// 引入编辑器和样式\nimport Editor from 'property-template-editor';\nimport 'property-template-editor/index.css';\n\nconst Demo = () => {\n  const [text, setText] = useState('');\n\n  // label 配置\n  const labelBlock = {\n    text: '沟通内容：',\n    className: '', // label class\n  };\n  // 编辑器配置\n  const contentBlock = {\n    height: 180,\n    value: text,\n    placeholder: '请输入',\n    onChange: (value) => {\n      console.log('editor value: ', value);\n      setText(value);\n    },\n  };\n\n  // 实际接口为准\n  const urls = {\n    user: '',\n    event: '',\n    event2: '',\n    product: '',\n    product2: '',\n    white: '',\n    white2: '',\n  };\n\n  return (\n    <Editor\n      labelBlock={labelBlock}\n      contentBlock={contentBlock}\n      tools={['user', 'event', 'product', 'white']}\n      urls={urls} // 属性接口地址\n      mock // 调试阶段开启 mock，不使用 urls 接口\n    />\n  );\n};\n  ~~~\n\n### 属性 Props:\n\n| 属性名称 | 类型 | 说明 | 默认值|\n| - | - | - | - |\n| labelBlock | labelBlock | label 配置 | 见 labelBlock |\n| contentBlock | contentBlock | 编辑器配置 | 见 contentBlock |\n| tools | string[] | 支持插入属性的类型 | ['user', 'event', 'product', 'white'] |\n| urls | Object | 获取属性 api 路径 | - |\n| mock | boolean | api 未就绪启用 mock | false |\n\n#### labelBlock：\n| 属性名称 | 类型 | 说明 | 默认值|\n| - | - | - | - |\n| text | string | label 文案 | '内容' |\n| className | string | 自定义 label 样式名称 | - |\n\n#### contentBlock\n| 属性名称 | 类型 | 说明 | 默认值|\n| - | - | - | - |\n| height | number | 编辑器高度 | 180 |\n| value | string | 编辑器 value | '' |\n| placeholder | string | 编辑器 placeholder | '请输入' |\n| onChange | (v: string) => void | 编辑器回调，返回 value | - |\n  `;\n\n  return (\n    <div className=\"App\">\n      <h2>属性编辑器演示 & 使用文档：</h2>\n      <div style={{ width: 900, marginTop: 20 }}>\n        <Editor\n          style={{ width: 500 }}\n          readonly={false}\n          labelBlock={labelBlock}\n          contentBlock={contentBlock}\n          tools={['user', 'event', 'product', 'white']}\n          urls={urls}\n          mock\n        />\n      </div>\n      <h3 style={{ margin: '20px 0' }}>编辑区获取 value: </h3>\n      <textarea disabled style={{ width: 900, height: 300 }} value={text} />\n      <h3 style={{ margin: '20px 0' }}>代码示例: </h3>\n      <div style={{ width: 900 }}>\n        <Markdown\n          children={doc}\n          remarkPlugins={[remarkGfm]}\n          components={{\n            code({ node, inline, className, children, ...props }) {\n              const match = /language-(\\w+)/.exec(className || '');\n              return !inline && match ? (\n                <SyntaxHighlighter\n                  children={String(children).replace(/\\n$/, '')}\n                  style={atomDark}\n                  language={match[1]}\n                  PreTag=\"div\"\n                  {...props}\n                />\n              ) : (\n                <code className={className} {...props}>\n                  {children}\n                </code>\n              );\n            },\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}